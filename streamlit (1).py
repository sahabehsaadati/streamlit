# -*- coding: utf-8 -*-
"""streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_cY6I-NoXQZX57DcTObPa9CTThgygTAq
"""

import streamlit as st
import pandas as pd
from sklearn import metrics
from sklearn.ensemble import RandomForestClassifier

st.title("Random Forest Classifier for the Iris Dataset")

# Load the iris dataset
@st.cache
def load_data():
    iris = pd.read_csv('D:\Term 3\Machine Learning\codes\Random Forest\iris.csv')
    iris.drop("Id", axis = 1, inplace = True)
    return iris

iris = load_data()
st.write("First 5 rows of the iris dataset:", iris.head())

# Split the data into feature matrix and target variable
X = iris.drop(['Species'], axis = 1)
Y = iris['Species']

# Split the data into training and testing sets
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.3, random_state= 5)

# Train the Random Forest Classifier
RFC_model = RandomForestClassifier(criterion='gini', random_state=42)
RFC_model.fit(X_train, Y_train)

# Predict the target variable for the test set
Y_pred = RFC_model.predict(X_test)

# Evaluate the model's performance
accuracy = metrics.accuracy_score(Y_test, Y_pred)
st.write("Accuracy:", accuracy)

# Confusion Matrix and Classification Report
confusion_matrix = confusion_matrix(Y_test, Y_pred)
classification_report = classification_report(Y_test, Y_pred)
st.write("Confusion Matrix:", confusion_matrix)
st.write("Classification Report:", classification_report)